@model LuxeCart.Models.UserRegistration

@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/_UserPanelLayoutPage.cshtml";
}
@if(TempData["ErrorRegister"] != null)
            {
               <div class="alert alert-danger alert-dismissible fade show" role="alert">
                   @TempData["ErrorRegister"]
                   <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
               </div>
            }
<div class="registration-container">
    <h2>Create Your Account</h2>
    @using (Html.BeginForm("Register", "Credentials", FormMethod.Post, new { enctype = "multipart/form-data", @class = "registration-form" }))
    {
        @Html.AntiForgeryToken()

        <!-- First Name -->
        <div class="form-group">
            @Html.LabelFor(m => m.FirstName, "First Name")
            @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control", placeholder = "Enter your first name" })
            @Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "text-danger" })
        </div>

        <!-- Last Name -->
        <div class="form-group">
            @Html.LabelFor(m => m.LastName, "Last Name")
            @Html.TextBoxFor(m => m.LastName, new { @class = "form-control", placeholder = "Enter your last name" })
            @Html.ValidationMessageFor(m => m.LastName, "", new { @class = "text-danger" })
        </div>

        <!-- Email Address -->
        <div class="form-group">
            @Html.LabelFor(m => m.Email, new { @class = "control-label" })
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control", placeholder = "Enter your email", type = "email" })
            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
        </div>

        <!-- Password -->
        <div class="form-group">
            @Html.LabelFor(m => m.Password, "Password")
            @Html.PasswordFor(m => m.Password, new { @class = "form-control", placeholder = "Enter your password" })
            @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
        </div>

        <!-- Confirm Password -->
        <div class="form-group">
            @Html.LabelFor(m => m.ConfirmPassword, "Confirm Password")
            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", placeholder = "Confirm your password" })
            @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
        </div>

        <!-- Phone Number -->
        <div class="form-group">
            @Html.LabelFor(m => m.PhoneNumber, "Phone Number")
            @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control", placeholder = "Enter your phone number", type = "tel" })
            @Html.ValidationMessageFor(m => m.PhoneNumber, "", new { @class = "text-danger" })
        </div>

        <!-- Date of Birth -->
        <div class="form-group">
            @Html.LabelFor(m => m.DateOfBirth, "Date of Birth")
            @Html.TextBoxFor(m => m.DateOfBirth, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })
            @Html.ValidationMessageFor(m => m.DateOfBirth, "", new { @class = "text-danger" })
        </div>

        <!-- Gender -->
        <div class="form-group">
            @Html.LabelFor(m => m.Gender, "Gender")
            @Html.DropDownListFor(m => m.Gender, new List<SelectListItem>
            {
                new SelectListItem { Text = "Male", Value = "Male" },
                new SelectListItem { Text = "Female", Value = "Female" },
                new SelectListItem { Text = "Other", Value = "Other" }
            }, "Select Gender", new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Gender, "", new { @class = "text-danger" })
        </div>

        <!-- Profile Picture -->
        <div class="form-group">
            @Html.LabelFor(m => m.ProfilePicture, "Profile Picture")
            <input type="file" name="ProfilePicture" class="form-control-file" />
            @Html.ValidationMessageFor(m => m.ProfilePicture, "", new { @class = "text-danger" })
        </div>

        <!-- Terms and Conditions -->
        <div class="form-group form-check">
            @Html.CheckBoxFor(m => m.AcceptTerms, new { @class = "form-check-input" })
            @Html.LabelFor(m => m.AcceptTerms, "I agree to the Terms and Conditions", new { @class = "form-check-label" })
            @Html.ValidationMessageFor(m => m.AcceptTerms, "", new { @class = "text-danger" })
        </div>

        <!-- Submit Button -->
        <button type="submit" class="btn btn-primary btn-block">Register</button>
    }
</div>