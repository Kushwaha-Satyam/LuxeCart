@model LuxeCart.Models.Product

@{
    ViewBag.Title = "Edit Product";
    Layout = "~/Views/Shared/_AdminPanelLayoutPage.cshtml";
}
@using (Html.BeginForm("EditProduct","AdminPanel",FormMethod.Post))
{
    @Html.AntiForgeryToken()

<div class="card shadow-sm p-4">
    <h4>Product Details</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ProductID)

    <!-- Product Image -->
    <div class="form-group row">
        <label class="col-md-2 col-form-label">Product Image</label>
        <div class="col-md-10">
            <img src="@(string.IsNullOrEmpty(Model.ProductImageUrl) ? Url.Content("~/ProductImages/default-product.png") : Model.ProductImageUrl)"
                 alt="@Model.ProductName"
                 class="img-fluid mb-2 rounded shadow-sm"
                 style="max-width: 200px; height: auto;"
                 name="ProductImageUrl"/>
            @Html.ValidationMessageFor(model => model.ProductImageUrl, "", new { @class = "text-danger" })
        </div>
    </div>

    <!-- Product Name -->
    <div class="form-group row">
        @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "col-md-2 col-form-label" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter product name" } })
            @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
        </div>
    </div>

    <!-- Product Company -->
    <div class="form-group row">
        @Html.LabelFor(model => model.ProductCompany, htmlAttributes: new { @class = "col-md-2 col-form-label" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ProductCompany, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter company name" } })
            @Html.ValidationMessageFor(model => model.ProductCompany, "", new { @class = "text-danger" })
        </div>
    </div>

    <!-- Product Description -->
    <div class="form-group row">
        @Html.LabelFor(model => model.ProductDescription, htmlAttributes: new { @class = "col-md-2 col-form-label" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.ProductDescription, new { @class = "form-control", rows = 4, placeholder = "Enter product description" })
            @Html.ValidationMessageFor(model => model.ProductDescription, "", new { @class = "text-danger" })
        </div>
    </div>

    <!-- Product Price -->
    <div class="form-group row">
        @Html.LabelFor(model => model.ProductPrice, htmlAttributes: new { @class = "col-md-2 col-form-label" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ProductPrice, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter price" } })
            @Html.ValidationMessageFor(model => model.ProductPrice, "", new { @class = "text-danger" })
        </div>
    </div>

    <!-- Product Quantity -->
    <div class="form-group row">
        @Html.LabelFor(model => model.ProductQuantity, htmlAttributes: new { @class = "col-md-2 col-form-label" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ProductQuantity, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter quantity" } })
            @Html.ValidationMessageFor(model => model.ProductQuantity, "", new { @class = "text-danger" })
        </div>
    </div>

    <!-- Category ID -->
    <div class="form-group row">
        @Html.LabelFor(model => model.CategoryID, htmlAttributes: new { @class = "col-md-2 col-form-label" })
        <div class="col-md-10">
            @Html.DropDownListFor(m => m.CategoryID, ViewBag.Categories as SelectList, "Select Category", new { @class = "form-select", required = "required" })
            @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
        </div>
    </div>

    <!-- Created Date -->
    <div class="form-group row">
        @Html.LabelFor(model => model.CreatedDate, htmlAttributes: new { @class = "col-md-2 col-form-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.CreatedDate, new { @class = "form-control", @readonly = "readonly" })
            @Html.ValidationMessageFor(model => model.CreatedDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <!-- Is Available -->
    <div class="form-group row">
        @Html.LabelFor(model => model.IsAvailable, htmlAttributes: new { @class = "col-md-2 col-form-label" })
        <div class="col-md-10">
            @Html.DropDownListFor(
                model => model.IsAvailable,
                new SelectList(
                    new[] {
                        new { Text = "Yes", Value = true },
                        new { Text = "No", Value = false }
                    },
                    "Value",
                    "Text",
                    Model.IsAvailable),
                "Select Availability",
                new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.IsAvailable, "", new { @class = "text-danger" })
        </div>
    </div>

    <!-- Save Button -->
    <div class="form-group row">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-primary btn-lg" />
            @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-secondary btn-lg" })
        </div>
    </div>
</div>
}

<div class="mt-3">
    @Html.ActionLink("Back to List", "AllProducts", null, new { @class = "btn btn-link" })
</div>
